<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Asteroid throwing properties

_throwChance = 1 / 60;
_throwRadius = point_distance(0, 0, view_wview / 2, view_hview / 2) - 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Throw asteroids randomly

var chance = _throwChance;

if (game_is_tutorial()) chance = 0;

if (get_target_planet_atmosphere_density(objShip.x, objShip.y) &gt; 0.01) {
    chance = 0;
}

if distance_to_goo_origin(objShip.x, objShip.y) &lt; 3000 {
    if (objBoss._attack != BOSS_ATTACK.ASTEROIDS) {
        chance = 0;
    } else {
        chance = 4 / 60;
    }
}

while (random(1) &lt; chance) {
    // Throw asteroid!
    var angleRandom = random(360);
    var xa = view_xview + view_wview/2 + lengthdir_x(_throwRadius, angleRandom);
    var ya = view_yview + view_hview/2 + lengthdir_y(_throwRadius, angleRandom);
    var moveAngle = angleRandom - 180 + random(40) - 20; // What angle we're traveling at?

    var moveSpeed = random(1) + 2;
    
    var asteroid = instance_create(xa, ya, objAsteroid);
    if instance_exists(asteroid) {
        asteroid._velX = lengthdir_x(moveSpeed, moveAngle);
        asteroid._velY = lengthdir_y(moveSpeed, moveAngle);
        asteroid._velRotation = 0.4 * (random(moveSpeed * 2) - moveSpeed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
